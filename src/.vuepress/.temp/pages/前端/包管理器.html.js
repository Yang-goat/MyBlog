import comp from "D:/Project/Blog/my-blog_newtheme/src/.vuepress/.temp/pages/前端/包管理器.html.vue"
const data = JSON.parse("{\"path\":\"/%E5%89%8D%E7%AB%AF/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8.html\",\"title\":\"包管理器\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"pen-to-square\",\"date\":\"2025-06-11T00:00:00.000Z\",\"order\":1,\"category\":[\"前端\"],\"tag\":[\"基础\"],\"description\":\"包管理器 包管理器是现代前端开发中至关重要的工具，用于自动化依赖管理、版本控制和构建流程。 一、核心功能与作用 依赖管理 自动下载和安装项目所需的第三方库（如 React、Vue、Lodash）。 解决依赖冲突（如多个包依赖同一库的不同版本）。 版本控制 通过 package.json 锁定依赖版本，确保团队成员和生产环境使用相同的版本。 支持语义化版...\",\"head\":[[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"包管理器\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2025-06-11T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Goat_Yang\\\",\\\"url\\\":\\\"https://mister-hope.com\\\"}]}\"],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/Yang-goat/MyBlog/%E5%89%8D%E7%AB%AF/%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Goat_Yang\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"包管理器\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"包管理器 包管理器是现代前端开发中至关重要的工具，用于自动化依赖管理、版本控制和构建流程。 一、核心功能与作用 依赖管理 自动下载和安装项目所需的第三方库（如 React、Vue、Lodash）。 解决依赖冲突（如多个包依赖同一库的不同版本）。 版本控制 通过 package.json 锁定依赖版本，确保团队成员和生产环境使用相同的版本。 支持语义化版...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"基础\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2025-06-11T00:00:00.000Z\"}]]},\"git\":{},\"readingTime\":{\"minutes\":1.52,\"words\":455},\"filePathRelative\":\"前端/包管理器.md\",\"excerpt\":\"\\n<p>包管理器是现代前端开发中至关重要的工具，用于自动化依赖管理、版本控制和构建流程。</p>\\n<h2>一、核心功能与作用</h2>\\n<ol>\\n<li>依赖管理\\n<ul>\\n<li>自动下载和安装项目所需的第三方库（如 React、Vue、Lodash）。</li>\\n<li>解决依赖冲突（如多个包依赖同一库的不同版本）。</li>\\n</ul>\\n</li>\\n<li>版本控制\\n<ul>\\n<li>通过 <code>package.json</code> 锁定依赖版本，确保团队成员和生产环境使用相同的版本。</li>\\n<li>支持语义化版本（SemVer），如 <code>^1.2.3</code> 表示兼容主版本，<code>~1.2.3</code> 表示兼容次版本。</li>\\n</ul>\\n</li>\\n<li>脚本自动化\\n<ul>\\n<li>通过 <code>package.json</code> 中的 <code>scripts</code> 字段定义命令（如 <code>npm run build</code>），简化构建、测试、部署流程。</li>\\n</ul>\\n</li>\\n<li>缓存机制\\n<ul>\\n<li>本地缓存已下载的包，加速后续安装过程。</li>\\n</ul>\\n</li>\\n</ol>\",\"autoDesc\":true}")
export { comp, data }
