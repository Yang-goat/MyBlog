import comp from "D:/Project/Blog/myBlog/src/.vuepress/.temp/pages/笔记/程序设计语言/java/多线程.html.vue"
const data = JSON.parse("{\"path\":\"/%E7%AC%94%E8%AE%B0/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B.html\",\"title\":\"Java 多线程\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"pen-to-square\",\"date\":\"2022-03-01T00:00:00.000Z\",\"order\":3,\"category\":[\"Java\"],\"tag\":[\"基础\"],\"description\":\"Java 多线程 Java多线程是指在同一程序中同时执行多个任务的能力。每个任务在程序中被称为一个线程（Thread）。在Java中，多线程可以帮助我们更高效地利用计算机的多核处理能力，提升程序的并发性和响应性。 1. 线程的基本概念 线程是程序中的一个执行单元，每个线程都有自己的程序计数器、栈和局部变量。多线程允许程序在同一时间执行多个操作，而这些操...\",\"head\":[[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Java 多线程\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2022-03-01T00:00:00.000Z\\\",\\\"dateModified\\\":\\\"2025-06-19T06:28:34.000Z\\\",\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Goat_Yang\\\",\\\"url\\\":\\\"https://mister-hope.com\\\"}]}\"],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/Yang-goat/MyBlog/%E7%AC%94%E8%AE%B0/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80/java/%E5%A4%9A%E7%BA%BF%E7%A8%8B.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Goat_Yang\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Java 多线程\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Java 多线程 Java多线程是指在同一程序中同时执行多个任务的能力。每个任务在程序中被称为一个线程（Thread）。在Java中，多线程可以帮助我们更高效地利用计算机的多核处理能力，提升程序的并发性和响应性。 1. 线程的基本概念 线程是程序中的一个执行单元，每个线程都有自己的程序计数器、栈和局部变量。多线程允许程序在同一时间执行多个操作，而这些操...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"og:updated_time\",\"content\":\"2025-06-19T06:28:34.000Z\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"基础\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2022-03-01T00:00:00.000Z\"}],[\"meta\",{\"property\":\"article:modified_time\",\"content\":\"2025-06-19T06:28:34.000Z\"}]]},\"git\":{\"createdTime\":1749567106000,\"updatedTime\":1750314514000,\"contributors\":[{\"name\":\"Yang-goat\",\"username\":\"Yang-goat\",\"email\":\"1700425119@qq.com\",\"commits\":2,\"url\":\"https://github.com/Yang-goat\"}]},\"readingTime\":{\"minutes\":7.19,\"words\":2157},\"filePathRelative\":\"笔记/程序设计语言/java/多线程.md\",\"excerpt\":\"\\n<p>Java多线程是指在同一程序中同时执行多个任务的能力。每个任务在程序中被称为一个线程（Thread）。在Java中，多线程可以帮助我们更高效地利用计算机的多核处理能力，提升程序的并发性和响应性。</p>\\n<hr>\\n<h2>1. 线程的基本概念</h2>\\n<p>线程是程序中的一个执行单元，每个线程都有自己的程序计数器、栈和局部变量。多线程允许程序在同一时间执行多个操作，而这些操作共享同一个内存空间。</p>\\n<blockquote>\\n<p>联想操作系统中线程PCB</p>\\n</blockquote>\\n<h2>2. 创建线程的方式</h2>\\n<h3>1) 继承 <code>Thread</code> 类</h3>\",\"autoDesc\":true}")
export { comp, data }
