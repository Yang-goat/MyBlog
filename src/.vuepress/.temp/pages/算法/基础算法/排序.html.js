import comp from "D:/Project/Blog/my-blog_newtheme/src/.vuepress/.temp/pages/算法/基础算法/排序.html.vue"
const data = JSON.parse("{\"path\":\"/%E7%AE%97%E6%B3%95/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F.html\",\"title\":\"排序\",\"lang\":\"zh-CN\",\"frontmatter\":{\"icon\":\"code\",\"date\":\"2025-09-12T00:00:00.000Z\",\"order\":1,\"category\":[\"算法\"],\"tag\":[\"排序\"],\"description\":\"排序 std::sort 使用CPP内置STL库的 sort() 算法 用法: 自定义比较 运算符重载与cmp函数 题目链接 P1177 【模板】排序\",\"head\":[[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"排序\\\",\\\"image\\\":[\\\"\\\"],\\\"datePublished\\\":\\\"2025-09-12T00:00:00.000Z\\\",\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Goat_Yang\\\",\\\"url\\\":\\\"https://mister-hope.com\\\"}]}\"],[\"meta\",{\"property\":\"og:url\",\"content\":\"https://github.com/Yang-goat/MyBlog/%E7%AE%97%E6%B3%95/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/%E6%8E%92%E5%BA%8F.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Goat_Yang\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"排序\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"排序 std::sort 使用CPP内置STL库的 sort() 算法 用法: 自定义比较 运算符重载与cmp函数 题目链接 P1177 【模板】排序\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"排序\"}],[\"meta\",{\"property\":\"article:published_time\",\"content\":\"2025-09-12T00:00:00.000Z\"}]]},\"readingTime\":{\"minutes\":0.91,\"words\":272},\"filePathRelative\":\"算法/基础算法/排序.md\",\"excerpt\":\"\\n<h2><code>std::sort</code></h2>\\n<p>使用CPP内置STL库的 <code>sort()</code> 算法</p>\\n<p>用法:</p>\\n<div class=\\\"language-cpp line-numbers-mode\\\" data-highlighter=\\\"shiki\\\" data-ext=\\\"cpp\\\" style=\\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\\"><pre class=\\\"shiki shiki-themes one-light one-dark-pro vp-code\\\"><code class=\\\"language-cpp\\\"><span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">// a[0] .. a[n - 1] 为需要排序的数列</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">// 对 a 原地排序，将其按从小到大的顺序排列</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\">std</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">::</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">sort</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(a, a </span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">+</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> n);</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">// cmp 为自定义的比较函数</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\">std</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">::</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">sort</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(a, a </span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">+</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> n, cmp);</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\">std</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">::</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">sort</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(a </span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">+</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">, a </span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">+</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 1</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> +</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> n);</span><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">                  // a[1] .. a[n] 从小到大排序</span></span>\\n<span class=\\\"line\\\"><span style=\\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\\">std</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">::</span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">sort</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">(a </span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">+</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 1</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">, a </span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">+</span><span style=\\\"--shiki-light:#986801;--shiki-dark:#D19A66\\\"> 1</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\"> +</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\"> n, </span><span style=\\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\\">greater</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&lt;</span><span style=\\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\\">int</span><span style=\\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\\">&gt;());</span><span style=\\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\\">  // a[1] .. a[n] 从大到小排序</span></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
