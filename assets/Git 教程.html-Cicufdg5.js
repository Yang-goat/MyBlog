import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,i as e,o as n}from"./app-B6c4ghtT.js";const h="/assets/1-qzF1joVU.png",l="/assets/2-C3Kdv4Od.png",t="/assets/%E4%BB%93%E5%BA%93%E5%9C%B0%E5%9D%80-D6b9xF9N.png",d={};function r(k,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="git-教程" tabindex="-1"><a class="header-anchor" href="#git-教程"><span>Git 教程</span></a></h1><h2 id="一、git-简介" tabindex="-1"><a class="header-anchor" href="#一、git-简介"><span>一、Git 简介</span></a></h2><p>Git 是一个分布式版本控制系统，常用于代码管理。它能帮助你：</p><ul><li>追踪代码变化历史</li><li>与多人协作开发</li><li>方便回退与分支管理</li></ul><h2 id="二、git安装" tabindex="-1"><a class="header-anchor" href="#二、git安装"><span>二、Git安装</span></a></h2><p><a href="https://git-scm.cn/downloads" target="_blank" rel="noopener noreferrer">git官网下载链接</a></p><p><a href="https://blog.csdn.net/mukes/article/details/115693833" target="_blank" rel="noopener noreferrer">引用外站CSDN安装教程</a></p><p>安装后可用以下命令检查版本：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="三、基本配置-第一次使用时需要设置" tabindex="-1"><a class="header-anchor" href="#三、基本配置-第一次使用时需要设置"><span>三、基本配置（第一次使用时需要设置）</span></a></h2><h3 id="用户名与邮箱配置" tabindex="-1"><a class="header-anchor" href="#用户名与邮箱配置"><span>用户名与邮箱配置</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.name</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;你的名字&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user.email</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;你的邮箱&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看当前配置：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="windows-配置-github-ssh-key-gitee类似" tabindex="-1"><a class="header-anchor" href="#windows-配置-github-ssh-key-gitee类似"><span>Windows 配置 GitHub SSH Key (Gitee类似)</span></a></h3><h4 id="_1-检查是否已有-ssh-key" tabindex="-1"><a class="header-anchor" href="#_1-检查是否已有-ssh-key"><span>1. 检查是否已有 SSH key</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ls</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果里面有 <code>id_ed25519</code> 或 <code>id_rsa</code>，说明已经生成过，可以跳到 <strong>第 3 步</strong>。</p><h4 id="_2-生成新的-ssh-key" tabindex="-1"><a class="header-anchor" href="#_2-生成新的-ssh-key"><span>2. 生成新的 SSH key</span></a></h4><p>在终端或 <code>Git Bash</code> 执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-keygen</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ed25519</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -C</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;你的GitHub邮箱&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>⚠️ 注意：</p><ul><li><p><code>-C</code> 后面是你的 <strong>GitHub 注册邮箱</strong>。</p></li><li><p>如果电脑比较老，不支持 ed25519，可以改成 <code>rsa</code>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ssh-keygen -t rsa -b 4096 -C &quot;你的GitHub邮箱&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>一路回车即可，默认会保存在：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>C:\\Users\\你的用户名\\.ssh\\</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>会生成两个文件：</p><ul><li><code>id_ed25519</code>（私钥，不能泄露）</li><li><code>id_ed25519.pub</code>（公钥，要上传到 GitHub）</li></ul><h4 id="_3-启动-ssh-代理并添加-key" tabindex="-1"><a class="header-anchor" href="#_3-启动-ssh-代理并添加-key"><span>3. 启动 SSH 代理并添加 key</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">eval</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;$(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-agent</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">)&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh-add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/id_ed25519</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>（如果报错找不到 <code>ssh-add</code>，用 <strong>Git Bash</strong> 执行）</p><h4 id="_4-把公钥加到-github" tabindex="-1"><a class="header-anchor" href="#_4-把公钥加到-github"><span>4. 把公钥加到 GitHub</span></a></h4><ol><li><p>打开文件：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">notepad</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~/.ssh/id_ed25519.pub</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 或手动在c盘中打开该文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>复制里面的内容。</p></li><li><p>登录 GitHub → <code>Settings</code> → <code>SSH and GPG keys</code> → <code>New SSH key</code>。</p></li></ol><figure><img src="`+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>Title 随便填（比如 &quot;My Windows PC&quot;），Key 里粘贴刚才复制的内容 → <strong>保存</strong>。</li></ol><figure><img src="'+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h4 id="_5-测试连接" tabindex="-1"><a class="header-anchor" href="#_5-测试连接"><span>5. 测试连接</span></a></h4><p>在终端执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -T</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git@github.com</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第一次可能会提示：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> authenticity</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> of</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> host</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;github.com&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> can&#39;t be established...</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>输入 <code>yes</code> 回车。</p><p>如果输出：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Hi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 你的GitHub用户名!</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> You&#39;ve successfully authenticated...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>说明 SSH 配置成功 ✅。</p><h4 id="_6-修改远程仓库地址为-ssh" tabindex="-1"><a class="header-anchor" href="#_6-修改远程仓库地址为-ssh"><span>6. 修改远程仓库地址为 SSH</span></a></h4><p>进入你的项目目录，执行：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set-url</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git@github.com:你的用户名/仓库名.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="四、创建仓库" tabindex="-1"><a class="header-anchor" href="#四、创建仓库"><span>四、创建仓库</span></a></h2><h3 id="_1-在本地新建仓库" tabindex="-1"><a class="header-anchor" href="#_1-在本地新建仓库"><span>1. 在本地新建仓库</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-project</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-project</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行后会生成一个 .git 文件夹，表示已经是一个 Git 仓库。</p><h3 id="_2-克隆远程仓库" tabindex="-1"><a class="header-anchor" href="#_2-克隆远程仓库"><span>2. 克隆远程仓库</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 仓库地址</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>仓库地址从github对应仓库页面的code处复制粘贴，可以选择https和ssh：</p><figure><img src="`+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>由于第三点已配置ssh，这里优先使用ssh连接，因为ssh连接比https连接更稳定</p><p>示例：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># https连接</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/username/repo.git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ssh连接</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git@github.com:username/repo.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此就实现了首次将远程仓库代码下载到本地。</p><h2 id="五、核心工作流程" tabindex="-1"><a class="header-anchor" href="#五、核心工作流程"><span>五、核心工作流程</span></a></h2><p>Git 的核心流程：<br><strong>工作区 → 暂存区 → 本地仓库 → 远程仓库</strong></p><ol><li>查看状态</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> status</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>添加到暂存区</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 文件名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 添加所有文件</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>提交到本地仓库</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;提交说明&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>推送到远程仓库</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>origin 是远程仓库的默认名字，main 是分支名（有时是 master）。</p><h2 id="六、常见场景" tabindex="-1"><a class="header-anchor" href="#六、常见场景"><span>六、常见场景</span></a></h2><h3 id="从-github-拉取仓库并在新分支上开发" tabindex="-1"><a class="header-anchor" href="#从-github-拉取仓库并在新分支上开发"><span>从 GitHub 拉取仓库并在新分支上开发</span></a></h3><p>假设 GitHub 上已经有一个仓库，你要拉取下来，然后在自己的分支开发。</p><h4 id="_1-克隆仓库到本地" tabindex="-1"><a class="header-anchor" href="#_1-克隆仓库到本地"><span>1. 克隆仓库到本地</span></a></h4><p>在命令行输入：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> git@github.com:用户名/仓库名.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>（如果没配置 SSH，也可以用 HTTPS 地址）</p><p>进入项目目录：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 仓库名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-查看远程和本地分支" tabindex="-1"><a class="header-anchor" href="#_2-查看远程和本地分支"><span>2. 查看远程和本地分支</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> branch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>带 <code>remotes/origin/...</code> 的是远程分支</li><li>没有 <code>remotes</code> 的是你本地的分支</li></ul><h4 id="_3-新建并切换到开发分支" tabindex="-1"><a class="header-anchor" href="#_3-新建并切换到开发分支"><span>3. 新建并切换到开发分支</span></a></h4><p>假设你要在 <code>feature-dev</code> 分支上开发：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样就新建了一个本地分支，并自动切换过去。</p><p>（等价写法：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> switch</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -c</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>）</p><h4 id="_4-开发-提交代码" tabindex="-1"><a class="header-anchor" href="#_4-开发-提交代码"><span>4. 开发 &amp; 提交代码</span></a></h4><p>写完代码后：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;实现了xxx功能&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="_5-推送分支到远程" tabindex="-1"><a class="header-anchor" href="#_5-推送分支到远程"><span>5. 推送分支到远程</span></a></h4><p>第一次推送需要指定远程分支：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>之后只要：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>就行。</p><h4 id="_6-提交-pull-request-pr" tabindex="-1"><a class="header-anchor" href="#_6-提交-pull-request-pr"><span>6. 提交 Pull Request (PR)</span></a></h4><ol><li>打开 GitHub 仓库页面。</li><li>你会看到提示「Compare &amp; pull request」，点进去。</li><li>选择 <strong>base 分支</strong>（一般是 <code>main</code> 或 <code>master</code>），和你的 <strong>feature-dev 分支</strong>进行对比。</li><li>填写说明，提交 PR。</li><li>等团队成员 review 并合并。</li></ol><h3 id="本地代码未敲完时-暂存本地代码-拉取远程代码-后与本地代码合并" tabindex="-1"><a class="header-anchor" href="#本地代码未敲完时-暂存本地代码-拉取远程代码-后与本地代码合并"><span>本地代码未敲完时，暂存本地代码，拉取远程代码，后与本地代码合并</span></a></h3><p>把本地未完成的修改先临时存起来，拉取远程代码后再恢复。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 1. 保存本地改动到 stash（不会丢失）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 2. 拉取远程更新并合并</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 3. 取回你刚才 stash 的修改</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="七、" tabindex="-1"><a class="header-anchor" href="#七、"><span>七、</span></a></h2>`,106)]))}const c=s(d,[["render",r]]),o=JSON.parse('{"path":"/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/Git%20%E6%95%99%E7%A8%8B.html","title":"Git 教程","lang":"zh-CN","frontmatter":{"icon":"book-bookmark","date":"2025-09-27T00:00:00.000Z","order":1,"category":["git"],"tag":["版本控制","教程"],"description":"Git 教程 一、Git 简介 Git 是一个分布式版本控制系统，常用于代码管理。它能帮助你： 追踪代码变化历史 与多人协作开发 方便回退与分支管理 二、Git安装 git官网下载链接 引用外站CSDN安装教程 安装后可用以下命令检查版本： 三、基本配置（第一次使用时需要设置） 用户名与邮箱配置 查看当前配置： Windows 配置 GitHub SS...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git 教程\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-09-27T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-27T08:49:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Goat_Yang\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://github.com/Yang-goat/MyBlog/%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7%E6%95%99%E7%A8%8B/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/Git%20%E6%95%99%E7%A8%8B.html"}],["meta",{"property":"og:site_name","content":"Goat_Yang"}],["meta",{"property":"og:title","content":"Git 教程"}],["meta",{"property":"og:description","content":"Git 教程 一、Git 简介 Git 是一个分布式版本控制系统，常用于代码管理。它能帮助你： 追踪代码变化历史 与多人协作开发 方便回退与分支管理 二、Git安装 git官网下载链接 引用外站CSDN安装教程 安装后可用以下命令检查版本： 三、基本配置（第一次使用时需要设置） 用户名与邮箱配置 查看当前配置： Windows 配置 GitHub SS..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-27T08:49:08.000Z"}],["meta",{"property":"article:tag","content":"教程"}],["meta",{"property":"article:tag","content":"版本控制"}],["meta",{"property":"article:published_time","content":"2025-09-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-27T08:49:08.000Z"}]]},"git":{"createdTime":1758962948000,"updatedTime":1758962948000,"contributors":[{"name":"Yang-goat","username":"Yang-goat","email":"1700425119@qq.com","commits":1,"url":"https://github.com/Yang-goat"}]},"readingTime":{"minutes":4.02,"words":1207},"filePathRelative":"实用工具教程/版本控制/Git 教程.md","excerpt":"\\n<h2>一、Git 简介</h2>\\n<p>Git 是一个分布式版本控制系统，常用于代码管理。它能帮助你：</p>\\n<ul>\\n<li>追踪代码变化历史</li>\\n<li>与多人协作开发</li>\\n<li>方便回退与分支管理</li>\\n</ul>\\n<h2>二、Git安装</h2>\\n<p><a href=\\"https://git-scm.cn/downloads\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">git官网下载链接</a></p>\\n<p><a href=\\"https://blog.csdn.net/mukes/article/details/115693833\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">引用外站CSDN安装教程</a></p>","autoDesc":true}');export{c as comp,o as data};
